// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts

@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


@mixin clearfix{
  &::after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  display: inline-block;
}

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels


//// Responsive device width
//$xl: 1399px;
//$lg: 1199px;
//$md: 991px;
//$sm: 767px;
//$xs: 575px;
//$xxs: 460px;
//$xxxs: 380px;
$breakpoints: (
    'xl': 1399px,
    'lg': 1199px,
    'md': 991px,
    'sm': 767px,
    'xs': 575px,
    'xxs': 460px,
    'exs': 360px,
);


@mixin media($media){
  @media all and (max-width: #{map-get($breakpoints,#{$media})}){
    @content
  }
}

@mixin media-width($media-width){
  @media all and (max-width: #{$media-width}px){
    transition: .5s; // animate when window resizing
    @content
  }
}
@mixin min-media-width($media-width){
  @media all and (min-width: #{$media-width}px){
    transition: .5s; // animate when window resizing
    @content
  }
}


@mixin transition($s) {
  -webkit-transition: $s;
  -o-transition: $s;
  transition: $s;
}

@mixin transform($trnsfrm) {
  -webkit-transform: $trnsfrm;
  -ms-transform: $trnsfrm;
  transform: $trnsfrm;
}